{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Trybe/Projetos/Projeto 11 - Trybe Tunes/sd-018-b-project-trybetunes/src/components/MusicCard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: '',\n      checked: false,\n      showContent: false\n    };\n\n    this.isClicked = async _ref => {\n      let {\n        target\n      } = _ref;\n      this.setState(prevState => ({\n        loading: 'Carregando...',\n        checked: !prevState.checked,\n        showContent: false\n      }));\n      await addSong(target.id);\n      this.setState({\n        loading: ''\n      });\n    };\n\n    this.showContent = () => {\n      const {\n        checked\n      } = this.state;\n      const {\n        trackName,\n        previewUrl,\n        trackId\n      } = this.props;\n      const {\n        loading,\n        showContent\n      } = this.state;\n\n      if (showContent) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: trackName !== undefined ? trackName : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), trackName !== undefined ? /*#__PURE__*/_jsxDEV(\"audio\", {\n            \"data-testid\": \"audio-component\",\n            src: previewUrl,\n            controls: true,\n            children: [/*#__PURE__*/_jsxDEV(\"track\", {\n              kind: \"captions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this) : null, trackName !== undefined ? /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: trackName,\n            children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n              \"data-testid\": `checkbox-music-${trackId}`,\n              id: trackName,\n              type: \"checkbox\",\n              onClick: this.isClicked,\n              checked: checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n            children: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }, this);\n    };\n  }\n\n  render() {\n    return this.showContent();\n  }\n\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  trackId: PropTypes.string.isRequired,\n  ApiObject: PropTypes.string.isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/gabriel/Trybe/Projetos/Projeto 11 - Trybe Tunes/sd-018-b-project-trybetunes/src/components/MusicCard.js"],"names":["React","Component","PropTypes","addSong","getFavoriteSongs","MusicCard","state","loading","checked","showContent","isClicked","target","setState","prevState","id","trackName","previewUrl","trackId","props","undefined","render","propTypes","string","isRequired","ApiObject"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,gBAAlB,QAA0C,8BAA1C;;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCK,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,WAAW,EAAE;AAHP,KADwB;;AAAA,SAahCC,SAbgC,GAapB,cAAsB;AAAA,UAAf;AAAEC,QAAAA;AAAF,OAAe;AAChC,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BN,QAAAA,OAAO,EAAE,eADmB;AAE5BC,QAAAA,OAAO,EAAE,CAACK,SAAS,CAACL,OAFQ;AAG5BC,QAAAA,WAAW,EAAE;AAHe,OAAhB,CAAd;AAKA,YAAMN,OAAO,CAACQ,MAAM,CAACG,EAAR,CAAb;AACA,WAAKF,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KArB+B;;AAAA,SAuBhCE,WAvBgC,GAuBlB,MAAM;AAClB,YAAM;AAAED,QAAAA;AAAF,UAAc,KAAKF,KAAzB;AACA,YAAM;AAAES,QAAAA,SAAF;AAAaC,QAAAA,UAAb;AAAyBC,QAAAA;AAAzB,UAAqC,KAAKC,KAAhD;AACA,YAAM;AAAEX,QAAAA,OAAF;AAAWE,QAAAA;AAAX,UAA2B,KAAKH,KAAtC;;AACA,UAAIG,WAAJ,EAAiB;AACf,4BACE;AAAA,kCACE;AAAA,sBACGM,SAAS,KAAKI,SAAd,GAA0BJ,SAA1B,GAAsC;AADzC;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGA,SAAS,KAAKI,SAAd,gBAEG;AAAO,2BAAY,iBAAnB;AAAqC,YAAA,GAAG,EAAGH,UAA3C;AAAwD,YAAA,QAAQ,MAAhE;AAAA,oCACE;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADF,4DAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFH,GAOe,IAXlB,EAYGD,SAAS,KAAKI,SAAd,gBAEG;AAAO,YAAA,OAAO,EAAGJ,SAAjB;AAAA,gDAEE;AACE,6BAAe,kBAAiBE,OAAQ,EAD1C;AAEE,cAAA,EAAE,EAAGF,SAFP;AAGE,cAAA,IAAI,EAAC,UAHP;AAIE,cAAA,OAAO,EAAG,KAAKL,SAJjB;AAKE,cAAA,OAAO,EAAGF;AALZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFH,GAWe,IAvBlB,eAwBE;AAAA,sBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AA4BD;;AACD,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KA1D+B;AAAA;;AA4DhCa,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKX,WAAL,EAAP;AACD;;AA9D+B;;AAiElCJ,SAAS,CAACgB,SAAV,GAAsB;AACpBN,EAAAA,SAAS,EAAEb,SAAS,CAACoB,MAAV,CAAiBC,UADR;AAEpBP,EAAAA,UAAU,EAAEd,SAAS,CAACoB,MAAV,CAAiBC,UAFT;AAGpBN,EAAAA,OAAO,EAAEf,SAAS,CAACoB,MAAV,CAAiBC,UAHN;AAIpBC,EAAAA,SAAS,EAAEtB,SAAS,CAACoB,MAAV,CAAiBC;AAJR,CAAtB;AAOA,eAAelB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass MusicCard extends Component {\n  state = {\n    loading: '',\n    checked: false,\n    showContent: false,\n  }\n\n  /* async componentDidMount() {\n\n    const result = await getFavoriteSongs();\n\n  } */\n\n  isClicked = async ({ target }) => {\n    this.setState((prevState) => ({\n      loading: 'Carregando...',\n      checked: !prevState.checked,\n      showContent: false,\n    }));\n    await addSong(target.id);\n    this.setState({ loading: '' });\n  }\n\n  showContent = () => {\n    const { checked } = this.state;\n    const { trackName, previewUrl, trackId } = this.props;\n    const { loading, showContent } = this.state;\n    if (showContent) {\n      return (\n        <div>\n          <h3>\n            {trackName !== undefined ? trackName : null}\n          </h3>\n          {trackName !== undefined\n            ? (\n              <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n                <track kind=\"captions\" />\n                O seu navegador n√£o suporta o elemento\n                <code>audio</code>\n                .\n              </audio>) : null}\n          {trackName !== undefined\n            ? (\n              <label htmlFor={ trackName }>\n                Favorita\n                <input\n                  data-testid={ `checkbox-music-${trackId}` }\n                  id={ trackName }\n                  type=\"checkbox\"\n                  onClick={ this.isClicked }\n                  checked={ checked }\n                />\n              </label>) : null}\n          <p>{loading}</p>\n        </div>\n      );\n    }\n    return <h2>Carregando...</h2>;\n  }\n\n  render() {\n    return this.showContent();\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  trackId: PropTypes.string.isRequired,\n  ApiObject: PropTypes.string.isRequired,\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}