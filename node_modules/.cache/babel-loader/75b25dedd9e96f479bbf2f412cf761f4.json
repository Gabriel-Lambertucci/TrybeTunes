{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Trybe/Projetos/Projeto 11 - Trybe Tunes/sd-018-b-project-trybetunes/src/pages/Album.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Album extends Component {\n  constructor() {\n    super();\n\n    this.changeCheckedState = async () => {\n      const {\n        location\n      } = this.props;\n      const {\n        pathname\n      } = location;\n      const id = pathname.replace(/[^0-9]/g, '');\n      const {\n        checked\n      } = this.state;\n      this.setState(prevState => ({\n        checked: !prevState.checked\n      }));\n\n      if (checked === false) {\n        this.setState({\n          loading: 'Carregando...'\n        });\n        await addSong(id);\n        this.setState({\n          loading: ''\n        });\n      }\n    };\n\n    this.showArtist = () => {\n      const {\n        ApiResult\n      } = this.state;\n\n      if (ApiResult.length > 0) {\n        this.artist = ApiResult[0].artistName;\n        this.album = ApiResult[0].albumName;\n      }\n\n      return this.artist;\n    };\n\n    this.showAlbum = () => {\n      const {\n        ApiResult\n      } = this.state;\n\n      if (ApiResult.length > 0) {\n        this.album = ApiResult[0].collectionName;\n      }\n\n      return this.album;\n    };\n\n    this.changeShowContent = () => {\n      this.setState({\n        showContent: true\n      });\n    };\n\n    this.showMusics = () => {\n      const {\n        ApiResult,\n        showContent,\n        checked\n      } = this.state;\n\n      if (showContent) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"page-album\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            \"data-testid\": \"artist-name\",\n            children: this.showArtist()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            \"data-testid\": \"album-name\",\n            children: this.showAlbum()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), ApiResult.lenght !== 0 ? ApiResult.map((item, index) => /*#__PURE__*/_jsxDEV(MusicCard, {\n            showContent: this.changeShowContent,\n            ApiObject: item,\n            trackId: item.trackId,\n            trackName: item.trackName,\n            previewUrl: item.previewUrl,\n            checked: checked,\n            checkedState: this.changeCheckedState\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Carregando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MusicCard, {\n          showContent: this.changeShowContent,\n          ApiObject: \"\",\n          trackId: \"\",\n          trackName: \"\",\n          previewUrl: \"\",\n          checked: checked,\n          checkedState: this.changeCheckedState\n        }, \"\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.artist = '';\n    this.album = '';\n    this.state = {\n      ApiResult: [],\n      showContent: false,\n      checked: false\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      location\n    } = this.props;\n    const {\n      pathname\n    } = location;\n    const id = pathname.replace(/[^0-9]/g, '');\n    const result = await getMusics(id);\n    this.setState({\n      ApiResult: result\n    });\n  }\n\n  render() {\n    return this.showMusics();\n  }\n\n}\n\nAlbum.propTypes = {\n  location: PropTypes.string.isRequired,\n  pathname: PropTypes.string.isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/gabriel/Trybe/Projetos/Projeto 11 - Trybe Tunes/sd-018-b-project-trybetunes/src/pages/Album.js"],"names":["React","Component","PropTypes","Header","MusicCard","getMusics","Album","constructor","changeCheckedState","location","props","pathname","id","replace","checked","state","setState","prevState","loading","addSong","showArtist","ApiResult","length","artist","artistName","album","albumName","showAlbum","collectionName","changeShowContent","showContent","showMusics","lenght","map","item","index","trackId","trackName","previewUrl","componentDidMount","result","render","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\n\nclass Album extends Component {\n  constructor() {\n    super();\n    this.artist = '';\n    this.album = '';\n    this.state = {\n      ApiResult: [],\n      showContent: false,\n      checked: false,\n    };\n  }\n\n  async componentDidMount() {\n    const { location } = this.props;\n    const { pathname } = location;\n    const id = pathname.replace(/[^0-9]/g, '');\n    const result = await getMusics(id);\n    this.setState({ ApiResult: result });\n  }\n\n  changeCheckedState = async () => {\n    const { location } = this.props;\n    const { pathname } = location;\n    const id = pathname.replace(/[^0-9]/g, '');\n    const { checked } = this.state;\n    this.setState((prevState) => ({\n      checked: !prevState.checked,\n    }));\n    if (checked === false) {\n      this.setState({ loading: 'Carregando...' });\n      await addSong(id);\n      this.setState({ loading: '' });\n    }\n  }\n\n  showArtist = () => {\n    const { ApiResult } = this.state;\n    if (ApiResult.length > 0) {\n      this.artist = ApiResult[0].artistName;\n      this.album = ApiResult[0].albumName;\n    }\n    return (\n      this.artist\n    );\n  }\n\n  showAlbum = () => {\n    const { ApiResult } = this.state;\n    if (ApiResult.length > 0) {\n      this.album = ApiResult[0].collectionName;\n    }\n    return (\n      this.album\n    );\n  }\n\n  changeShowContent = () => {\n    this.setState({ showContent: true });\n  }\n\n  showMusics = () => {\n    const { ApiResult, showContent, checked } = this.state;\n    if (showContent) {\n      return (\n        <div data-testid=\"page-album\">\n          <Header />\n          <h2 data-testid=\"artist-name\">{this.showArtist()}</h2>\n          <h3 data-testid=\"album-name\">{this.showAlbum()}</h3>\n          {ApiResult.lenght !== 0\n            ? ApiResult.map((item, index) => (\n              <MusicCard\n                showContent={ this.changeShowContent }\n                ApiObject={ item }\n                trackId={ item.trackId }\n                key={ index }\n                trackName={ item.trackName }\n                previewUrl={ item.previewUrl }\n                checked={ checked }\n                checkedState={ this.changeCheckedState }\n              />)) : null }\n        </div>\n      );\n    }\n    return (\n      <>\n        <h2>Carregando...</h2>\n        <MusicCard\n          showContent={ this.changeShowContent }\n          ApiObject=\"\"\n          trackId=\"\"\n          key=\"\"\n          trackName=\"\"\n          previewUrl=\"\"\n          checked={ checked }\n          checkedState={ this.changeCheckedState }\n        />\n      </>\n\n    );\n  }\n\n  render() {\n    return this.showMusics();\n  }\n}\n\nAlbum.propTypes = {\n  location: PropTypes.string.isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}