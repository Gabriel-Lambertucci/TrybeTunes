{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Trybe/Projetos/Projeto 11 - Trybe Tunes/sd-018-b-project-trybetunes/src/pages/Album.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst carregando = 'Carregando...';\n\nclass Album extends Component {\n  constructor() {\n    super();\n\n    this.onChangeHandler = async (checked, ApiObject) => {\n      console.log(checked, ApiObject);\n      this.setState({\n        loading: carregando\n      });\n\n      if (checked === true) {\n        this.inputTarget.push(ApiObject);\n        await addSong(ApiObject);\n      }\n\n      if (checked === false) {\n        console.log(ApiObject.trackName);\n        this.inputTarget = this.inputTarget.filter(item => item.trackName !== ApiObject.trackName);\n        await removeSong(ApiObject);\n      }\n\n      this.setState({\n        loading: 'off'\n      });\n    };\n\n    this.showArtist = () => {\n      const {\n        ApiResult\n      } = this.state;\n\n      if (ApiResult.length > 0) {\n        this.artist = ApiResult[0].artistName;\n        this.album = ApiResult[0].albumName;\n      }\n\n      return this.artist;\n    };\n\n    this.showAlbum = () => {\n      const {\n        ApiResult\n      } = this.state;\n\n      if (ApiResult.length > 0) {\n        this.album = ApiResult[0].collectionName;\n      }\n\n      return this.album;\n    };\n\n    this.inputTargetChecked = trackName => {\n      const result = this.inputTarget.some(item => item.trackName === trackName);\n      return result;\n    };\n\n    this.showMusics = () => {\n      const {\n        ApiResult,\n        loading\n      } = this.state;\n\n      if (loading === 'off') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"page-album\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            \"data-testid\": \"artist-name\",\n            children: this.showArtist()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            \"data-testid\": \"album-name\",\n            children: this.showAlbum()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), ApiResult.lenght !== 0 ? ApiResult.map((item, index) => /*#__PURE__*/_jsxDEV(MusicCard, {\n            ApiObject: item,\n            trackId: item.trackId,\n            trackName: item.trackName,\n            previewUrl: item.previewUrl,\n            onChange: this.onChangeHandler,\n            checked: this.inputTargetChecked(item.trackName)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this);\n      }\n\n      if (loading === carregando || loading === '') {\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: carregando\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.inputTarget = [];\n    this.artist = '';\n    this.album = '';\n    this.state = {\n      ApiResult: [],\n      loading: ''\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      location\n    } = this.props;\n    const {\n      pathname\n    } = location;\n    const id = pathname.replace(/[^0-9]/g, '');\n    const result = await getMusics(id);\n    this.inputTarget = await getFavoriteSongs();\n    this.setState({\n      ApiResult: result,\n      loading: 'off'\n    });\n  }\n\n  render() {\n    return this.showMusics();\n  }\n\n}\n\nAlbum.defaultProps = {\n  pathname: undefined\n};\nAlbum.propTypes = {\n  location: PropTypes.objectOf(PropTypes.shape()).isRequired,\n  pathname: PropTypes.string\n};\nexport default Album;","map":{"version":3,"sources":["/home/gabriel/Trybe/Projetos/Projeto 11 - Trybe Tunes/sd-018-b-project-trybetunes/src/pages/Album.js"],"names":["React","Component","PropTypes","Header","MusicCard","getMusics","addSong","getFavoriteSongs","removeSong","carregando","Album","constructor","onChangeHandler","checked","ApiObject","console","log","setState","loading","inputTarget","push","trackName","filter","item","showArtist","ApiResult","state","length","artist","artistName","album","albumName","showAlbum","collectionName","inputTargetChecked","result","some","showMusics","lenght","map","index","trackId","previewUrl","componentDidMount","location","props","pathname","id","replace","render","defaultProps","undefined","propTypes","objectOf","shape","isRequired","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nconst carregando = 'Carregando...';\n\nclass Album extends Component {\n  constructor() {\n    super();\n    this.inputTarget = [];\n    this.artist = '';\n    this.album = '';\n    this.state = {\n      ApiResult: [],\n      loading: '',\n    };\n  }\n\n  async componentDidMount() {\n    const { location } = this.props;\n    const { pathname } = location;\n    const id = pathname.replace(/[^0-9]/g, '');\n    const result = await getMusics(id);\n    this.inputTarget = await getFavoriteSongs();\n    this.setState({ ApiResult: result, loading: 'off' });\n  }\n\n  onChangeHandler = async (checked, ApiObject) => {\n    console.log(checked, ApiObject);\n    this.setState({ loading: carregando });\n    if (checked === true) {\n      this.inputTarget.push(ApiObject);\n      await addSong(ApiObject);\n    }\n    if (checked === false) {\n      console.log(ApiObject.trackName);\n      this.inputTarget = this.inputTarget.filter((item) => item.trackName !== ApiObject.trackName);\n      await removeSong(ApiObject);\n    }\n    this.setState({ loading: 'off' });\n  }\n\n  showArtist = () => {\n    const { ApiResult } = this.state;\n    if (ApiResult.length > 0) {\n      this.artist = ApiResult[0].artistName;\n      this.album = ApiResult[0].albumName;\n    }\n    return (\n      this.artist\n    );\n  }\n\n  showAlbum = () => {\n    const { ApiResult } = this.state;\n    if (ApiResult.length > 0) {\n      this.album = ApiResult[0].collectionName;\n    }\n    return (\n      this.album\n    );\n  }\n\n  inputTargetChecked = (trackName) => {\n    const result = this.inputTarget.some((item) => item.trackName === trackName);\n    return result;\n  }\n\n  showMusics = () => {\n    const { ApiResult, loading } = this.state;\n    if (loading === 'off') {\n      return (\n        <div data-testid=\"page-album\">\n          <Header />\n          <h2 data-testid=\"artist-name\">{this.showArtist()}</h2>\n          <h3 data-testid=\"album-name\">{this.showAlbum()}</h3>\n          {ApiResult.lenght !== 0\n            ? ApiResult.map((item, index) => (\n              <MusicCard\n                ApiObject={ item }\n                trackId={ item.trackId }\n                key={ index }\n                trackName={ item.trackName }\n                previewUrl={ item.previewUrl }\n                onChange={ this.onChangeHandler }\n                checked={ this.inputTargetChecked(item.trackName) }\n              />)) : null }\n        </div>\n      );\n    } if (loading === carregando || loading === '') {\n      return <h2>{ carregando }</h2>;\n    }\n  }\n\n  render() {\n    return this.showMusics();\n  }\n}\n\nAlbum.defaultProps = {\n  pathname: undefined,\n};\n\nAlbum.propTypes = {\n  location: PropTypes.objectOf(PropTypes.shape()).isRequired,\n  pathname: PropTypes.string,\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}