{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Trybe/Projetos/Projeto 11 - Trybe Tunes/sd-018-b-project-trybetunes/src/components/MusicCard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends Component {\n  /* onChangeHandler = ({ target }) => {\n    const { ApiObject, onChange } = this.props;\n    onChange(target, ApiObject);\n  } */\n  render() {\n    const {\n      trackName,\n      previewUrl,\n      trackId,\n      checked,\n      onChange,\n      ApiObject\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: trackName !== undefined ? trackName : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), trackName !== undefined || trackName === '' ? /*#__PURE__*/_jsxDEV(\"audio\", {\n        \"data-testid\": \"audio-component\",\n        src: previewUrl,\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"track\", {\n          kind: \"captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this) : null, trackName !== undefined ? /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: trackName,\n        children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": `checkbox-music-${trackId}`,\n          id: trackName,\n          type: \"checkbox\",\n          onClick: () => onChange(checked, ApiObject),\n          checked: checked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.defaultProps = {\n  trackName: undefined,\n  previewUrl: undefined,\n  trackId: undefined\n};\nMusicCard.propTypes = {\n  trackName: PropTypes.string,\n  previewUrl: PropTypes.string,\n  trackId: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n  ApiObject: PropTypes.objectOf(PropTypes.string).isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/gabriel/Trybe/Projetos/Projeto 11 - Trybe Tunes/sd-018-b-project-trybetunes/src/components/MusicCard.js"],"names":["React","Component","PropTypes","MusicCard","render","trackName","previewUrl","trackId","checked","onChange","ApiObject","props","undefined","defaultProps","propTypes","string","number","func","isRequired","bool","objectOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAChC;AACF;AACA;AACA;AAEEG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,UAAb;AAAyBC,MAAAA,OAAzB;AAAkCC,MAAAA,OAAlC;AAA2CC,MAAAA,QAA3C;AAAqDC,MAAAA;AAArD,QAAmE,KAAKC,KAA9E;AACA,wBACE;AAAA,8BACE;AAAA,kBACGN,SAAS,KAAKO,SAAd,GAA0BP,SAA1B,GAAsC;AADzC;AAAA;AAAA;AAAA;AAAA,cADF,EAIGA,SAAS,KAAKO,SAAd,IAA2BP,SAAS,KAAK,EAAzC,gBAEG;AAAO,uBAAY,iBAAnB;AAAqC,QAAA,GAAG,EAAGC,UAA3C;AAAwD,QAAA,QAAQ,MAAhE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,4DAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,GAOe,IAXlB,EAYGD,SAAS,KAAMO,SAAf,gBAEG;AAAO,QAAA,OAAO,EAAGP,SAAjB;AAAA,4CAEE;AACE,yBAAe,kBAAiBE,OAAQ,EAD1C;AAEE,UAAA,EAAE,EAAGF,SAFP;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,OAAO,EAAG,MAAMI,QAAQ,CAACD,OAAD,EAAUE,SAAV,CAJ1B;AAKE,UAAA,OAAO,EAAGF;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,GAWe,IAvBlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AAnC+B;;AAsClCL,SAAS,CAACU,YAAV,GAAyB;AACvBR,EAAAA,SAAS,EAAEO,SADY;AAEvBN,EAAAA,UAAU,EAAEM,SAFW;AAGvBL,EAAAA,OAAO,EAAEK;AAHc,CAAzB;AAMAT,SAAS,CAACW,SAAV,GAAsB;AACpBT,EAAAA,SAAS,EAAEH,SAAS,CAACa,MADD;AAEpBT,EAAAA,UAAU,EAAEJ,SAAS,CAACa,MAFF;AAGpBR,EAAAA,OAAO,EAAEL,SAAS,CAACc,MAHC;AAIpBP,EAAAA,QAAQ,EAAEP,SAAS,CAACe,IAAV,CAAeC,UAJL;AAKpBV,EAAAA,OAAO,EAAEN,SAAS,CAACiB,IAAV,CAAeD,UALJ;AAMpBR,EAAAA,SAAS,EAAER,SAAS,CAACkB,QAAV,CAAoBlB,SAAS,CAACa,MAA9B,EAAuCG;AAN9B,CAAtB;AASA,eAAef,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass MusicCard extends Component {\n  /* onChangeHandler = ({ target }) => {\n    const { ApiObject, onChange } = this.props;\n    onChange(target, ApiObject);\n  } */\n\n  render() {\n    const { trackName, previewUrl, trackId, checked, onChange, ApiObject } = this.props;\n    return (\n      <div>\n        <h3>\n          {trackName !== undefined ? trackName : null}\n        </h3>\n        {trackName !== undefined || trackName === ''\n          ? (\n            <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n              <track kind=\"captions\" />\n              O seu navegador n√£o suporta o elemento\n              <code>audio</code>\n              .\n            </audio>) : null}\n        {trackName !== (undefined)\n          ? (\n            <label htmlFor={ trackName }>\n              Favorita\n              <input\n                data-testid={ `checkbox-music-${trackId}` }\n                id={ trackName }\n                type=\"checkbox\"\n                onClick={ () => onChange(checked, ApiObject) }\n                checked={ checked }\n              />\n            </label>) : null}\n      </div>\n    );\n  }\n}\n\nMusicCard.defaultProps = {\n  trackName: undefined,\n  previewUrl: undefined,\n  trackId: undefined,\n};\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string,\n  previewUrl: PropTypes.string,\n  trackId: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n  ApiObject: PropTypes.objectOf((PropTypes.string)).isRequired,\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}