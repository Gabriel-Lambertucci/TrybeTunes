{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Trybe/Projetos/Projeto 11 - Trybe Tunes/sd-018-b-project-trybetunes/src/components/MusicCard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: '',\n      checked: false\n    };\n\n    this.isClicked = async _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        trackName\n      } = this.props;\n      this.setState(prevState => ({\n        checked: !prevState.checked\n      }));\n      const {\n        checkedState\n      } = this.props;\n      checkedState(trackName);\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      trackName\n    } = this.props;\n    const favoritesArray = await getFavoriteSongs();\n\n    if (favoritesArray.includes(trackName)) {\n      this.setState({\n        checked: true\n      });\n    }\n\n    const {\n      showContent\n    } = this.props;\n    showContent();\n  }\n\n  render() {\n    const {\n      trackName,\n      previewUrl,\n      trackId\n    } = this.props;\n    const {\n      loading,\n      checked\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: trackName !== undefined ? trackName : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), trackName !== undefined || trackName === '' ? /*#__PURE__*/_jsxDEV(\"audio\", {\n        \"data-testid\": \"audio-component\",\n        src: previewUrl,\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"track\", {\n          kind: \"captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this) : null, trackName !== undefined ? /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: trackName,\n        children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": `checkbox-music-${trackId}`,\n          id: trackName,\n          type: \"checkbox\",\n          onClick: this.isClicked,\n          checked: checked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  trackId: PropTypes.string.isRequired,\n  ApiObject: PropTypes.string.isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/gabriel/Trybe/Projetos/Projeto 11 - Trybe Tunes/sd-018-b-project-trybetunes/src/components/MusicCard.js"],"names":["React","Component","PropTypes","getFavoriteSongs","MusicCard","state","loading","checked","isClicked","target","trackName","props","setState","prevState","checkedState","componentDidMount","favoritesArray","includes","showContent","render","previewUrl","trackId","undefined","propTypes","string","isRequired","ApiObject"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCI,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,OAAO,EAAE;AAFH,KADwB;;AAAA,SAgBhCC,SAhBgC,GAgBpB,cAAsB;AAAA,UAAf;AAAEC,QAAAA;AAAF,OAAe;AAChC,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AACA,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAAEN,QAAAA,OAAO,EAAE,CAACM,SAAS,CAACN;AAAtB,OAAhB,CAAd;AACA,YAAM;AAAEO,QAAAA;AAAF,UAAmB,KAAKH,KAA9B;AACAG,MAAAA,YAAY,CAACJ,SAAD,CAAZ;AACD,KArB+B;AAAA;;AAMT,QAAjBK,iBAAiB,GAAG;AACxB,UAAM;AAAEL,MAAAA;AAAF,QAAgB,KAAKC,KAA3B;AACA,UAAMK,cAAc,GAAG,MAAMb,gBAAgB,EAA7C;;AACA,QAAIa,cAAc,CAACC,QAAf,CAAwBP,SAAxB,CAAJ,EAAwC;AACtC,WAAKE,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;;AACD,UAAM;AAAEW,MAAAA;AAAF,QAAkB,KAAKP,KAA7B;AACAO,IAAAA,WAAW;AACZ;;AASDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,SAAF;AAAaU,MAAAA,UAAb;AAAyBC,MAAAA;AAAzB,QAAqC,KAAKV,KAAhD;AACA,UAAM;AAAEL,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuB,KAAKF,KAAlC;AACA,wBACE;AAAA,8BACE;AAAA,kBACGK,SAAS,KAAKY,SAAd,GAA0BZ,SAA1B,GAAsC;AADzC;AAAA;AAAA;AAAA;AAAA,cADF,EAIGA,SAAS,KAAKY,SAAd,IAA2BZ,SAAS,KAAK,EAAzC,gBAEG;AAAO,uBAAY,iBAAnB;AAAqC,QAAA,GAAG,EAAGU,UAA3C;AAAwD,QAAA,QAAQ,MAAhE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,4DAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,GAOe,IAXlB,EAYGV,SAAS,KAAMY,SAAf,gBAEG;AAAO,QAAA,OAAO,EAAGZ,SAAjB;AAAA,4CAEE;AACE,yBAAe,kBAAiBW,OAAQ,EAD1C;AAEE,UAAA,EAAE,EAAGX,SAFP;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,OAAO,EAAG,KAAKF,SAJjB;AAKE,UAAA,OAAO,EAAGD;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,GAWe,IAvBlB,eAwBE;AAAA,kBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAtD+B;;AAyDlCF,SAAS,CAACmB,SAAV,GAAsB;AACpBb,EAAAA,SAAS,EAAER,SAAS,CAACsB,MAAV,CAAiBC,UADR;AAEpBL,EAAAA,UAAU,EAAElB,SAAS,CAACsB,MAAV,CAAiBC,UAFT;AAGpBJ,EAAAA,OAAO,EAAEnB,SAAS,CAACsB,MAAV,CAAiBC,UAHN;AAIpBC,EAAAA,SAAS,EAAExB,SAAS,CAACsB,MAAV,CAAiBC;AAJR,CAAtB;AAOA,eAAerB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass MusicCard extends Component {\n  state = {\n    loading: '',\n    checked: false,\n  }\n\n  async componentDidMount() {\n    const { trackName } = this.props;\n    const favoritesArray = await getFavoriteSongs();\n    if (favoritesArray.includes(trackName)) {\n      this.setState({ checked: true });\n    }\n    const { showContent } = this.props;\n    showContent();\n  }\n\n  isClicked = async ({ target }) => {\n    const { trackName } = this.props;\n    this.setState((prevState) => ({ checked: !prevState.checked }));\n    const { checkedState } = this.props;\n    checkedState(trackName);\n  }\n\n  render() {\n    const { trackName, previewUrl, trackId } = this.props;\n    const { loading, checked } = this.state;\n    return (\n      <div>\n        <h3>\n          {trackName !== undefined ? trackName : null}\n        </h3>\n        {trackName !== undefined || trackName === ''\n          ? (\n            <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n              <track kind=\"captions\" />\n              O seu navegador n√£o suporta o elemento\n              <code>audio</code>\n              .\n            </audio>) : null}\n        {trackName !== (undefined)\n          ? (\n            <label htmlFor={ trackName }>\n              Favorita\n              <input\n                data-testid={ `checkbox-music-${trackId}` }\n                id={ trackName }\n                type=\"checkbox\"\n                onClick={ this.isClicked }\n                checked={ checked }\n              />\n            </label>) : null}\n        <p>{loading}</p>\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  trackId: PropTypes.string.isRequired,\n  ApiObject: PropTypes.string.isRequired,\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}