{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Trybe/Projetos/Projeto 11 - Trybe Tunes/sd-018-b-project-trybetunes/src/pages/Album.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { addSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst carregando = 'Carregando...';\n\nclass Album extends Component {\n  constructor() {\n    super();\n\n    this.changeLoadingState = trackName => {\n      console.log('entrou');\n      const {\n        checked\n      } = this.state;\n      console.log(checked);\n      this.setState(prevState => ({\n        checked: !prevState.checked\n      }), async () => {\n        if (checked !== false) {\n          this.setState({\n            loading: carregando\n          });\n          await addSong(trackName);\n          this.setState({\n            loading: ''\n          });\n        }\n      });\n    };\n\n    this.showArtist = () => {\n      const {\n        ApiResult\n      } = this.state;\n\n      if (ApiResult.length > 0) {\n        this.artist = ApiResult[0].artistName;\n        this.album = ApiResult[0].albumName;\n      }\n\n      return this.artist;\n    };\n\n    this.showAlbum = () => {\n      const {\n        ApiResult\n      } = this.state;\n\n      if (ApiResult.length > 0) {\n        this.album = ApiResult[0].collectionName;\n      }\n\n      return this.album;\n    };\n\n    this.changeShowContent = () => {\n      this.setState({\n        showContent: true\n      });\n    };\n\n    this.verifyngFavorites = trackName => {\n      if (this.favoritesArray.includes(trackName)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.showMusics = () => {\n      const {\n        ApiResult,\n        showContent,\n        loading\n      } = this.state;\n\n      if (loading === '') {\n        if (showContent) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-testid\": \"page-album\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              \"data-testid\": \"artist-name\",\n              children: this.showArtist()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              \"data-testid\": \"album-name\",\n              children: this.showAlbum()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this), ApiResult.lenght !== 0 ? ApiResult.map((item, index) => /*#__PURE__*/_jsxDEV(MusicCard, {\n              showContent: this.changeShowContent,\n              ApiObject: item,\n              trackId: item.trackId,\n              trackName: item.trackName,\n              previewUrl: item.previewUrl,\n              loadingState: this.changeLoadingState,\n              checked: this.verifyngFavorites(item.trackName)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: carregando\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MusicCard, {\n            showContent: this.changeShowContent,\n            ApiObject: \"\",\n            trackId: \"\",\n            trackName: \"\",\n            previewUrl: \"\",\n            checkedState: this.changeLoadingState,\n            checked: false\n          }, \"\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true);\n      }\n\n      if (loading === carregando) {\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: carregando\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.favoritesArray = [];\n    this.artist = '';\n    this.album = '';\n    this.state = {\n      ApiResult: [],\n      showContent: false,\n      loading: '',\n      checked: ''\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      location\n    } = this.props;\n    const {\n      pathname\n    } = location;\n    const id = pathname.replace(/[^0-9]/g, '');\n    const result = await getMusics(id);\n    this.favoritesArray = await getFavoriteSongs();\n    this.setState({\n      ApiResult: result\n    });\n  }\n\n  render() {\n    return this.showMusics();\n  }\n\n}\n\nAlbum.propTypes = {\n  location: PropTypes.string.isRequired,\n  pathname: PropTypes.string.isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/gabriel/Trybe/Projetos/Projeto 11 - Trybe Tunes/sd-018-b-project-trybetunes/src/pages/Album.js"],"names":["React","Component","PropTypes","Header","MusicCard","getMusics","addSong","getFavoriteSongs","carregando","Album","constructor","changeLoadingState","trackName","console","log","checked","state","setState","prevState","loading","showArtist","ApiResult","length","artist","artistName","album","albumName","showAlbum","collectionName","changeShowContent","showContent","verifyngFavorites","favoritesArray","includes","showMusics","lenght","map","item","index","trackId","previewUrl","componentDidMount","location","props","pathname","id","replace","result","render","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { addSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nconst carregando = 'Carregando...';\n\nclass Album extends Component {\n  constructor() {\n    super();\n    this.favoritesArray = [];\n    this.artist = '';\n    this.album = '';\n    this.state = {\n      ApiResult: [],\n      showContent: false,\n      loading: '',\n      checked: '',\n    };\n  }\n\n  async componentDidMount() {\n    const { location } = this.props;\n    const { pathname } = location;\n    const id = pathname.replace(/[^0-9]/g, '');\n    const result = await getMusics(id);\n    this.favoritesArray = await getFavoriteSongs();\n    this.setState({ ApiResult: result });\n  }\n\n  changeLoadingState = (trackName) => {\n    console.log('entrou');\n    const { checked } = this.state;\n    console.log(checked);\n    this.setState((prevState) => (\n      {\n        checked: !prevState.checked,\n      }), async () => {\n      if (checked !== false) {\n        this.setState({ loading: carregando });\n        await addSong(trackName);\n        this.setState({ loading: '' });\n      }\n    });\n  }\n\n  showArtist = () => {\n    const { ApiResult } = this.state;\n    if (ApiResult.length > 0) {\n      this.artist = ApiResult[0].artistName;\n      this.album = ApiResult[0].albumName;\n    }\n    return (\n      this.artist\n    );\n  }\n\n  showAlbum = () => {\n    const { ApiResult } = this.state;\n    if (ApiResult.length > 0) {\n      this.album = ApiResult[0].collectionName;\n    }\n    return (\n      this.album\n    );\n  }\n\n  changeShowContent = () => {\n    this.setState({ showContent: true });\n  }\n\n  verifyngFavorites = (trackName) => {\n    if (this.favoritesArray.includes(trackName)) {\n      return true;\n    }\n    return false;\n  }\n\n  showMusics = () => {\n    const { ApiResult, showContent, loading } = this.state;\n    if (loading === '') {\n      if (showContent) {\n        return (\n          <div data-testid=\"page-album\">\n            <Header />\n            <h2 data-testid=\"artist-name\">{this.showArtist()}</h2>\n            <h3 data-testid=\"album-name\">{this.showAlbum()}</h3>\n            {ApiResult.lenght !== 0\n              ? ApiResult.map((item, index) => (\n                <MusicCard\n                  showContent={ this.changeShowContent }\n                  ApiObject={ item }\n                  trackId={ item.trackId }\n                  key={ index }\n                  trackName={ item.trackName }\n                  previewUrl={ item.previewUrl }\n                  loadingState={ this.changeLoadingState }\n                  checked={ this.verifyngFavorites(item.trackName) }\n                />)) : null }\n          </div>\n        );\n      }\n      return (\n        <>\n          <h2>{ carregando }</h2>\n          <MusicCard\n            showContent={ this.changeShowContent }\n            ApiObject=\"\"\n            trackId=\"\"\n            key=\"\"\n            trackName=\"\"\n            previewUrl=\"\"\n            checkedState={ this.changeLoadingState }\n            checked={ false }\n          />\n        </>\n\n      );\n    } if (loading === carregando) {\n      return <h2>{ carregando }</h2>;\n    }\n  }\n\n  render() {\n    return this.showMusics();\n  }\n}\n\nAlbum.propTypes = {\n  location: PropTypes.string.isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}